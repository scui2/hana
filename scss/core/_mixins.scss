$breakpoints: (
  small: 0,
  medium: 640,
  large: 1024,
  xlarge: 1200,
  xxlarge: 1440,
) !default;

@mixin respond-from($breakpoint) { 
  @if map-has-key($breakpoints, $breakpoint) {
    @media screen and ( min-width: #{ (map-get($breakpoints, $breakpoint)/16) + em} ) {
      @content;
    }
  }

  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Please make sure it is defined in `$breakpoints` map.";
  }
}

@mixin respond-upto($breakpoint) { 
  @if map-has-key($breakpoints, $breakpoint) {
    @media screen and ( max-width: #{ ((map-get($breakpoints, $breakpoint)-1)/16) + em} ) {
      @content;
    }
  }

  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Please make sure it is defined in `$breakpoints` map.";
  }
}

@mixin prefix($declarations, $prefixes: ()) {
  @each $property, $value in $declarations {
    @each $prefix in $prefixes {
      #{'-' + $prefix + '-' + $property}: $value;
    }
    // Output standard non-prefixed declaration
    #{$property}: $value;
  }
}

@function adjust_color($color, $percent) {
    $lightness: lightness($color);

    @if ($lightness >= 50) {
        @return darken(grayscale($color), $percent);
    }
    @else {
      @return lighten(grayscale($color), $percent);        
    }
}